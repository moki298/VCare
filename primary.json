[{"id":"5917a925.6a3c08","type":"inject","z":"10b4de98.4d5591","name":"Send Data","topic":"","payload":"true","payloadType":"bool","repeat":"1","crontab":"","once":false,"x":110,"y":120,"wires":[["6b4a591c.014b18"]]},{"id":"6b4a591c.014b18","type":"function","z":"10b4de98.4d5591","name":"Device payload","func":"// Patient details:\nvar patient1_name = \"John\";\nvar patient1_doctor = \"Ben\";\nvar patient1_doctorNum = \"\";\nvar patient1_roomNum = \"708\";\nvar patient1_bedNum = \"7\";\n\nvar patient2_name = \"Peter\";\nvar patient2_doctor = \"Anna\";\nvar patient2_doctorNum = \"\";\nvar patient2_roomNum = \"401\";\nvar patient2_bedNum = \"9\";\n\nvar patient3_name = \"Mike\";\nvar patient3_doctor = \"Ben\";\nvar patient3_doctorNum = \"\";\nvar patient3_roomNum = \"505\";\nvar patient3_bedNum = \"4\";\nvar array=[];\n\nfor(i=0;i<25;i++){\n    array.push(i);\n}\nvar patient1_pulse = [81,81,83,83,83,83,82,87,97,85,86,86,87,86,89,93,93,95,94,90,93,96,95,95,96,95,93, 93,90,89];\nvar patient1_bodyTemp = [97.1,97.1,97.1,97.1,97.1,97.1,97.1,97.1,97.1,97.1,97.1,97.2,97.2,97.1,97.1,97,97.1,97.1,97.3,97.1,97.1,97.2,97.2,97.2,97.2,97.2,97.2,97.2,97.2,97.2];\nvar patient1_oxy = [90,91,91,93,92,93,93,92,91,91,93,92,91,91,93,92,93,93,92,91,91,93,92,93,93,92,91,91,93,92];\n\nvar patient2_pulse = [81,81,83,83,83,83,82,87,83,82,87,93,85,86,81,83,82,87,93,85,86,93,85,86];\nvar patient2_bodyTemp = [98,98,98.1,98.1,98.1,98.1,98.1,98.1,98.1,98.1,98,98,97.9,97.9,97.9,97.9,97.9,97.9,97.9,97.9,97.9,97.9,97.9,98];\nvar patient2_oxy = [85,86,86,84,86,86,85,85,86,86,84,85,86,86,84,86,85,86,86,84,86,86,85,85];\n\nvar patient3_pulse = [83,82,87,93,85,86,83,82,87,93,85,86,87,93,85,86,83,83,82,87,93,83,82,87,93,85,86];\nvar patient3_bodyTemp = [98.5,98.5,98.5,98.5,98.5,98.5,98.4,98.4,98.4,98.4,98.4,98.4,98.5,98.5,98.4,98.4,98.4,98.4,98.4,98.4,98.5,98.6,98.6,98.4,98.4,98.4,98.4];\nvar patient3_oxy = [93,92,91,91,91,92,92,93,92,91,91,91,93,92,91,93,92,91,91,91,92,92,94,92,91,93,92];\nvar username = \"deepakaitha\";\nvar token = \"293229d577ca0dc553e2012713035d35a78673e1508ea4cf4f905377227f538f\"\nvar fileId = \"f0868f8ed-b46c-45ec-a14e-124491c0ac43\";\n\nvar request = \"https://api.datazar.com/files/\" + fileId + \" -u \" + username + \":\" + \"token\";\n\n// Counter to select from array.\nvar counter1 = context.get('counter1')||0;\ncounter1 = counter1+1;\nif(counter1 > 24) counter1 = 0;\ncontext.set('counter1',counter1);\n\n// Create MQTT message in JSON\nmsg = {\n  payload:\n    {\n      \"patient1\":{\n          \"pulse\": patient1_pulse[counter1],\n          \"bodyTemp\": patient1_bodyTemp[counter1],\n          \"oxygen\": patient1_oxy[counter1],\n          \"name\": patient1_name,\n          \"room\": patient1_roomNum,\n          \"bed\": patient1_bedNum\n      },\n      \"patient2\":{\n          \"pulse\": patient2_pulse[counter1],\n          \"bodyTemp\": patient2_bodyTemp[counter1],\n          \"oxygen\": patient2_oxy[counter1],\n          \"name\": patient2_name,\n          \"room\": patient2_roomNum,\n          \"bed\": patient2_bedNum\n      },\n      \"patient3\":{\n          \"pulse\": patient3_pulse[counter1],\n          \"bodyTemp\": patient3_bodyTemp[counter1],\n          \"oxygen\": patient3_oxy[counter1],\n          \"name\": patient3_name,\n          \"room\": patient3_roomNum,\n          \"bed\": patient3_bedNum\n      },\n      \n        \n      \n    }\n  \n};\nreturn msg;\n","outputs":1,"noerr":0,"x":317,"y":127.00000381469727,"wires":[["352ddb70.5d1104","805c97ee.3ed9e8","7c42ec00.3288c4","a6b9b202.c5a44","8d5c76b8.bc1aa8"]]},{"id":"805c97ee.3ed9e8","type":"debug","z":"10b4de98.4d5591","name":"Debug patient 1","active":true,"console":"false","complete":"payload.patient1","x":910.0000534057617,"y":27.000015258789062,"wires":[]},{"id":"86df0b6c.af90c8","type":"comment","z":"10b4de98.4d5591","name":"Device Simulator","info":"Sends simulated device sensor data to IBM Watson IoT Plaform.\n\nCan be configured to send on click or on an automatic interval.\n\n\n#Prerequisite\nOutput node device type and device ID need to match a device that it registered in a running IBM Watson IoT Platform service.\n\n# Watson IoT Platform docs\n[Connecting devices](https://www.bluemix.net/docs/services/IoT/iotplatform_task.html)","x":100,"y":40,"wires":[]},{"id":"c2dd8ed5.7dd7f","type":"comment","z":"10b4de98.4d5591","name":"2. Click to send data","info":"To automatically send data:\n1. Change *Repeat* to interval.\n2. Click Deploy button.\n","x":110,"y":161,"wires":[]},{"id":"c969d65.3376e28","type":"twilio out","z":"10b4de98.4d5591","service":"_ext_","twilio":"2f0f7d84.6692e2","from":"","number":"+15139138184","name":"SMS doctor","x":960.5001029968262,"y":196.0000057220459,"wires":[]},{"id":"7c42ec00.3288c4","type":"websocket out","z":"10b4de98.4d5591","name":"websocket out","server":"d4b7e62d.cf4948","client":"","x":714.1999931335449,"y":397.00001764297485,"wires":[]},{"id":"71648970.999ec8","type":"http response","z":"10b4de98.4d5591","name":"index page req handle","x":763.2000198364258,"y":337.0000190734863,"wires":[]},{"id":"7bdb5ef9.c2448","type":"http in","z":"10b4de98.4d5591","name":"Index page req","url":"/simple","method":"get","swaggerDoc":"","x":327.20001220703125,"y":312.0000510215759,"wires":[["19b66028.2658f"]]},{"id":"19b66028.2658f","type":"template","z":"10b4de98.4d5591","name":"Index page template","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE HTML>\n<html>\n    <head>\n    <title>VCare</title>\n        \n    <script type=\"text/javascript\">\n    \n   \n\n        var ws;\n        var wsUri = \"ws:\";\n        var loc = window.location;\n        console.log(loc);\n        if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n        \n        wsUri += \"//\" + loc.host + loc.pathname.replace(\"simple\",\"ws/simple\");\n\n        function wsConnect() {\n            console.log(\"connect\",wsUri);\n            ws = new WebSocket(wsUri);\n            \n            ws.onmessage = function(msg) {\n                var line = \"\";  // or uncomment this to overwrite the existing message\n                // parse the incoming message as a JSON object\n                var data = msg.data;\n                //console.log(data);\n                // build the output from the topic and payload parts of the object\n                line += \"<p>\"+data+\"</p>\";\n               \n                document.getElementById('messages').innerHTML = line;\n                //ws.send(JSON.stringify({data:data}));\n            }\n            ws.onopen = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"connected\";\n                //ws.send(\"Open for data\");\n                console.log(\"connected\");\n            }\n            ws.onclose = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"not connected\";\n                // in case of lost connection tries to reconnect every 3 secs\n                setTimeout(wsConnect,3000);\n            }\n        }\n        \n        function doit(m) {\n            if (ws) { ws.send(m); }\n        }\n    </script>\n    </head>\n    <body onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n        <font face=\"Arial\">\n        <h1>Vcare</h1>\n        <div id=\"messages\"></div>\n       \n        <hr/>\n        <div id=\"status\">unknown</div>\n        </font>\n    </body>\n</html>\n","x":523.1999931335449,"y":337.00001764297485,"wires":[["71648970.999ec8"]]},{"id":"5f0ce9d.81c4118","type":"websocket in","z":"10b4de98.4d5591","name":"web socket in","server":"d4b7e62d.cf4948","client":"","x":491.1999931335449,"y":449.00001764297485,"wires":[["eabeaaee.c7c0f8"]]},{"id":"eabeaaee.c7c0f8","type":"debug","z":"10b4de98.4d5591","name":"","active":false,"console":"false","complete":"payload","x":691.1999931335449,"y":449.00001764297485,"wires":[]},{"id":"352ddb70.5d1104","type":"switch","z":"10b4de98.4d5591","name":"Pulse threshold","property":"payload.patient1.pulse","propertyType":"msg","rules":[{"t":"gt","v":"96","vt":"str"}],"checkall":"true","outputs":1,"x":515.3000640869141,"y":175.0000057220459,"wires":[["d74d77d0.ed9688"]]},{"id":"d74d77d0.ed9688","type":"function","z":"10b4de98.4d5591","name":"Alert for doctor","func":"msg.payload =  \"Your patient \"+ msg.payload.patient1.name  + \" at Room: \"+ msg.payload.patient1.room + \", Bed: \"+ msg.payload.patient1.bed +\" is having a abnormal pulse of \" + msg.payload.patient1.pulse +\n        \" bpm\" + \". Please attend as soon as possible\";\n        \nmsg.payload = JSON.stringify(msg.payload);\n \nreturn msg;","outputs":1,"noerr":0,"x":714.3000679016113,"y":177.80000495910645,"wires":[["4518b2b9.3f1cdc","3edaad8f.0d12d2"]]},{"id":"4518b2b9.3f1cdc","type":"link out","z":"10b4de98.4d5591","name":"","links":["45df58b2.70f148"],"x":1022.5001020431519,"y":338.39999198913574,"wires":[]},{"id":"a6b9b202.c5a44","type":"debug","z":"10b4de98.4d5591","name":"Debug patient 2","active":true,"console":"false","complete":"payload.patient2","x":910.6000061035156,"y":84.20000267028809,"wires":[]},{"id":"8d5c76b8.bc1aa8","type":"debug","z":"10b4de98.4d5591","name":"Debug patient 3","active":true,"console":"false","complete":"payload.patient3","x":911.5999755859375,"y":140.1999969482422,"wires":[]},{"id":"3edaad8f.0d12d2","type":"debug","z":"10b4de98.4d5591","name":"Debug Message for doctor","active":true,"console":"false","complete":"true","x":922.6000061035156,"y":264.1999683380127,"wires":[]},{"id":"2f0f7d84.6692e2","type":"twilio-api","z":"","sid":"ACb53cec82670a98d194c3198ae232bb0e","from":"+18597571741","name":"Mohan"},{"id":"d4b7e62d.cf4948","type":"websocket-listener","z":"10b4de98.4d5591","path":"/ws/simple","wholemsg":"false"}]